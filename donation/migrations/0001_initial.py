# Generated by Django 4.2.20 on 2025-05-12 13:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Relatório',
                'verbose_name_plural': 'Relatórios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ThankYouMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Título')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thank_you_messages', to='core.company')),
            ],
            options={
                'verbose_name': 'Agradecimento',
                'verbose_name_plural': 'Mensagem de Agradecimentos',
            },
        ),
        migrations.CreateModel(
            name='ThankYouMessageLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=255, verbose_name='Linha de texto')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='donation.thankyoumessage')),
            ],
            options={
                'verbose_name': 'Linha da Mensagem',
                'verbose_name_plural': 'Linhas da Mensagem',
            },
        ),
        migrations.CreateModel(
            name='DonationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_printer', models.CharField(blank=True, help_text='Nome da impressora padrão para imprimir recibos.', max_length=255, null=True, verbose_name='Impressora Padrão')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_settings', to='core.company')),
                ('thank_you_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='donation.thankyoumessage', verbose_name='Mensagem de Agradecimento')),
            ],
            options={
                'verbose_name': 'Configuração de Doações',
                'verbose_name_plural': 'Configurações de Doações',
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Esperado (R$)')),
                ('expected_at', models.DateField(verbose_name='Data')),
                ('method', models.CharField(blank=True, choices=[('cash', 'Dinheiro'), ('pix', 'Pix'), ('transfer', 'Transferência Bancária'), ('boleto', 'Boleto'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('other', 'Outro')], max_length=20, null=True, verbose_name='Meio de Pagamento')),
                ('paid', models.BooleanField(default=False, verbose_name='Foi Pago?')),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Valor Recebido (R$)')),
                ('paid_at', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('notes', models.TextField(blank=True, max_length=255, null=True, verbose_name='Observação')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.donor', verbose_name='Doador')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='core.company')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee', verbose_name='Recebido por')),
            ],
            options={
                'verbose_name': 'Doação',
                'verbose_name_plural': 'Doações',
                'permissions': [('can_update_paid', 'Can update paid field')],
            },
        ),
        migrations.AddConstraint(
            model_name='donation',
            constraint=models.CheckConstraint(check=models.Q(('amount__gt', 0)), name='check_amount_positive'),
        ),
    ]

name: Build Windows 32-bit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # opcional: permite rodar manualmente

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Instalar Python 32-bit
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x86'

      - name: Instalar dependÃªncias
        run: |
          python -m pip install --upgrade pip
          pip install pywebview pyinstaller

      - name: Build com PyInstaller
        run: |
          pyinstaller --noconsole client.py

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: dist/
          
  github-release:
    name: GitHub Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download Windows 32-bit dist
        uses: actions/download-artifact@v4
        with:
          name: windows-dist
          path: dist/windows/
      - name: Create ZIP packages
        run: |
          cd dist
          zip -r windows-build.zip windows/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          if gh release view '${{ github.ref_name }}' --repo '${{ github.repository }}'; then
            echo "Release exists"
          else
            echo "Creating release"
            gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --generate-notes
          fi
      - name: Upload ZIPs to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}' dist/windows-build.zip --repo '${{ github.repository }}'